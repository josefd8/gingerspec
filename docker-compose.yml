######################################################################################################
# This is a docker-compose file that starts the necessary containers for testing the GingerSpec library
#
# In order to use it, go to the root folder of the project and execute
#
# $ cd gingerspec/
# $ docker-compose up -d
#
# All services will be available via localhost, and all will have port binding to a local port in the
# machine. The ports that will be used for binding are:
#
# * 3306 (mysql)
# * 5432 (postgres)
# * 8123 (clickhouse)
# * 3000 (Rest API server)
# * 3001 (GraphQL server)
# * 3002 (OAS2.x server)
# * 3003 (OAS3.x server)
# * 80   (Demo site)
# * 4444 (Selenium hub)
# * 5900 (Selenium node)
# * 9092 (Kafka broker)
# * 2181 (ZooKeeper)
# * 8081 (schema registry)
# * 3030 (landoops UI)
#
# So, make sure this ports are available in the host machine. To Execute all tests:
#
# $ mvn clean install -DVERSION=1.0 -DSLEEPTEST=3 -DAGENT_LIST=1,2 -DVARNAME=foo -DWAIT=1 -DPOSTGRES_HOST=localhost
#        -DMYSQL_HOST=localhost -DREST_SERVER_HOST=localhost -DDEMO_SITE_HOST=demo-site:4567 -DSELENIUM_GRID=http://localhost:4444/wd/hub
#        -DZOOKEEPER_HOST=localhost -DSCHEMA_REGISTRY_HOST=localhost -DGRAPHQL_SERVER_HOST=localhost
#
# Notice how DEMO_SITE_HOST does not use localhost but "demo-site" instead, since from within the docker net (from
# where selenium is executed) there is name resolution to the service name. You can still access the demo site from
# the host machine using localhost
#
# To terminate all services just execute
#
# $ docker-compose down
######################################################################################################
version: '3'

services:
  mysql:
    image: 'mysql:5.6'
    environment:
      MYSQL_ROOT_PASSWORD: "mysql"
    ports:
      - "3306:3306"
  postgres:
    image: 'postgres:9.6.8'
    environment:
      POSTGRES_PASSWORD: 'postgres'
    ports:
      - "5432:5432"
  clickhouse:
    image: 'dmamontov/gingerspec-clickhouse:1.0'
    ports:
      - "8123:8123"
  rest-server:
    image: 'privaliatech/privalia-rest-server:0.1.0'
    ports:
      - "3000:3000"
  graphql-server:
    image: 'dmamontov/gingerspec-graphql:1.0'
    ports:
      - "3001:3000"
  oas2-server:
    image: 'dmamontov/gingerspec-oas:2'
    ports:
      - "3002:4010"
  oas3-server:
    image: 'dmamontov/gingerspec-oas:3'
    ports:
      - "3003:4010"
  demo-site:
    image: 'josefd8/selenium-testpages-image:1.0'
    ports:
      - "4567:4567"
  selenium-grid:
    image: 'selenium/hub:3.141.59-20210311'
    ports:
      - "4444:4444"
  selenium-chrome:
    image: 'selenium/node-chrome:3.141.59-20210311'
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-grid
    environment:
      - HUB_HOST=selenium-grid
      - HUB_PORT=4444
  kafka:
    image: 'landoop/fast-data-dev:2.5.1'
    ports:
      - "2181:2181"
      - "3030:3030"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "9092:9092"
    environment:
      - ADV_HOST=localhost
      - CONNECT_HEAP=3G